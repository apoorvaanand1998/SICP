#lang sicp
(define (make-interval a b) (cons a b))

(define (upper-bound interval)
  (max (car interval) (cdr interval)))

(define (lower-bound interval)
  (min (car interval) (cdr interval)))

(define (add-interval a b)
  (make-interval (+ (lower-bound a) (lower-bound b))
                 (+ (upper-bound a) (upper-bound b))))

(define (sub-interval a b)
  (add-interval a
                (make-interval (- (upper-bound b)) (- (lower-bound b)))))

(define (mul-interval a b)
  (let ((p1 (* (lower-bound a) (lower-bound b)))
        (p2 (* (lower-bound a) (upper-bound b)))
        (p3 (* (upper-bound a) (lower-bound b)))
        (p4 (* (upper-bound a) (upper-bound b))))
    (make-interval (min p1 p2 p3 p4)
                   (max p1 p2 p3 p4))))

(define (spans-zero? interval)
  (if (and (or (< (lower-bound interval) 0)
               (= (lower-bound interval) 0))
           (or (> (upper-bound interval) 0)
               (= (lower-bound interval) 0)))
      #t
      #f))

(define (div-interval a b)
  (if (spans-zero? b)
      (error "Trying to divide by interval that spans zero")
      (mul-interval a
                (make-interval (/ 1 (upper-bound b)) (/ 1 (lower-bound b))))))

(define (pos? x) (or (> x 0) (= x 0)))
(define (neg? x) (< x 0))

(define (mul-interval-cases a b)
  (let ((la (lower-bound a))
        (ua (upper-bound a))
        (lb (lower-bound b))
        (ub (upper-bound b)))
    (cond ((and (pos? la) (pos? ua)
               (pos? lb) (pos? ub))
           (make-interval (* la lb) (* ua ub)))
          ((and (pos? la) (pos? ua)
                (neg? lb) (neg? ub))
           (make-interval  (* ua lb) (* la ub)))
          ((and (neg? la) (neg? ua)
                (pos? lb) (pos? ub))
           (make-interval (* la ub) (* ua lb)))
          ((and (pos? la) (pos? ua)
                (neg? lb) (pos? ub))
           (make-interval (* ua lb) (* ua ub)))
          ((and (neg? la) (neg? ua)
                (neg? lb) (neg? ub))
           (make-interval (* ua ub) (* la lb)))
          ((and (neg? la) (pos? ua)
                (pos? lb) (pos? ub))
           (make-interval (* la ub) (* ua ub)))
          ((and (neg? la) (neg? ua)
                (neg? lb) (pos? ub))
           (make-interval (* la ub) (* la lb)))
          ((and (neg? la) (pos? ua)
                (neg? lb) (neg? ub))
           (make-interval (* ua lb) (* la lb)))
          (else
           (make-interval (min (* la ub) (* ua lb))
                          (max (* la lb) (* ua ub)))))))

 (mul-interval-cases  (make-interval +10 +10)  (make-interval +10 +10))
 (mul-interval-cases  (make-interval +10 +10)  (make-interval +00 +10))
 (mul-interval-cases  (make-interval +10 +10)  (make-interval +00 +00))
 (mul-interval-cases  (make-interval +10 +10)  (make-interval +10 -10))
 (mul-interval-cases  (make-interval +10 +10)  (make-interval -10 +00))
 (mul-interval-cases  (make-interval +10 +10)  (make-interval -10 -10))
  
 (mul-interval-cases  (make-interval +00 +10)  (make-interval +10 +10))
 (mul-interval-cases  (make-interval +00 +10)  (make-interval +00 +10))
 (mul-interval-cases  (make-interval +00 +10)  (make-interval +00 +00))
 (mul-interval-cases  (make-interval +00 +10)  (make-interval +10 -10))
 (mul-interval-cases  (make-interval +00 +10)  (make-interval -10 +00))
 (mul-interval-cases  (make-interval +00 +10)  (make-interval -10 -10))
  
 (mul-interval-cases  (make-interval +00 +00)  (make-interval +10 +10))
 (mul-interval-cases  (make-interval +00 +00)  (make-interval +00 +10))
 (mul-interval-cases  (make-interval +00 +00)  (make-interval +00 +00))
 (mul-interval-cases  (make-interval +00 +00)  (make-interval +10 -10))
 (mul-interval-cases  (make-interval +00 +00)  (make-interval -10 +00))
 (mul-interval-cases  (make-interval +00 +00)  (make-interval -10 -10))
  
 (mul-interval-cases  (make-interval +10 -10)  (make-interval +10 +10))
 (mul-interval-cases  (make-interval +10 -10)  (make-interval +00 +10))
 (mul-interval-cases  (make-interval +10 -10)  (make-interval +00 +00))
 (mul-interval-cases  (make-interval +10 -10)  (make-interval +10 -10))
 (mul-interval-cases  (make-interval +10 -10)  (make-interval -10 +00))
 (mul-interval-cases  (make-interval +10 -10)  (make-interval -10 -10))
  
 (mul-interval-cases  (make-interval -10 +00)  (make-interval +10 +10))
 (mul-interval-cases  (make-interval -10 +00)  (make-interval +00 +10))
 (mul-interval-cases  (make-interval -10 +00)  (make-interval +00 +00))
 (mul-interval-cases  (make-interval -10 +00)  (make-interval +10 -10))
 (mul-interval-cases  (make-interval -10 +00)  (make-interval -10 +00))
 (mul-interval-cases  (make-interval -10 +00)  (make-interval -10 -10))
  
 (mul-interval-cases  (make-interval -10 -10)  (make-interval +10 +10))
 (mul-interval-cases  (make-interval -10 -10)  (make-interval +00 +10))
 (mul-interval-cases  (make-interval -10 -10)  (make-interval +00 +00))
 (mul-interval-cases  (make-interval -10 -10)  (make-interval +10 -10))
 (mul-interval-cases  (make-interval -10 -10)  (make-interval -10 +00))
 (mul-interval-cases  (make-interval -10 -10)  (make-interval -10 -10))
 ;; both display the same thing
 (mul-interval  (make-interval +10 +10) (make-interval +10 +10))
 (mul-interval  (make-interval +10 +10) (make-interval +00 +10))
 (mul-interval  (make-interval +10 +10) (make-interval +00 +00))
 (mul-interval  (make-interval +10 +10) (make-interval +10 -10))
 (mul-interval  (make-interval +10 +10) (make-interval -10 +00))
 (mul-interval  (make-interval +10 +10) (make-interval -10 -10))
  
 (mul-interval  (make-interval +00 +10) (make-interval +10 +10))
 (mul-interval  (make-interval +00 +10) (make-interval +00 +10))
 (mul-interval  (make-interval +00 +10) (make-interval +00 +00))
 (mul-interval  (make-interval +00 +10) (make-interval +10 -10))
 (mul-interval  (make-interval +00 +10) (make-interval -10 +00))
 (mul-interval  (make-interval +00 +10) (make-interval -10 -10))
  
 (mul-interval  (make-interval +00 +00) (make-interval +10 +10))
 (mul-interval  (make-interval +00 +00) (make-interval +00 +10))
 (mul-interval  (make-interval +00 +00) (make-interval +00 +00))
 (mul-interval  (make-interval +00 +00) (make-interval +10 -10))
 (mul-interval  (make-interval +00 +00) (make-interval -10 +00))
 (mul-interval  (make-interval +00 +00) (make-interval -10 -10))
  
 (mul-interval  (make-interval +10 -10) (make-interval +10 +10))
 (mul-interval  (make-interval +10 -10) (make-interval +00 +10))
 (mul-interval  (make-interval +10 -10) (make-interval +00 +00))
 (mul-interval  (make-interval +10 -10) (make-interval +10 -10))
 (mul-interval  (make-interval +10 -10) (make-interval -10 +00))
 (mul-interval  (make-interval +10 -10) (make-interval -10 -10))
  
 (mul-interval  (make-interval -10 +00) (make-interval +10 +10))
 (mul-interval  (make-interval -10 +00) (make-interval +00 +10))
 (mul-interval  (make-interval -10 +00) (make-interval +00 +00))
 (mul-interval  (make-interval -10 +00) (make-interval +10 -10))
 (mul-interval  (make-interval -10 +00) (make-interval -10 +00))
 (mul-interval  (make-interval -10 +00) (make-interval -10 -10))
  
 (mul-interval  (make-interval -10 -10) (make-interval +10 +10))
 (mul-interval  (make-interval -10 -10) (make-interval +00 +10))
 (mul-interval  (make-interval -10 -10) (make-interval +00 +00))
 (mul-interval  (make-interval -10 -10) (make-interval +10 -10))
 (mul-interval  (make-interval -10 -10) (make-interval -10 +00))
 (mul-interval  (make-interval -10 -10) (make-interval -10 -10))
